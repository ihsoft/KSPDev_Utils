<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>PersistentFieldAttribute Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="PersistentFieldAttribute class" /><meta name="System.Keywords" content="KSPDev.ConfigUtils.PersistentFieldAttribute class" /><meta name="Microsoft.Help.F1" content="KSPDev.ConfigUtils.PersistentFieldAttribute" /><meta name="Microsoft.Help.Id" content="T:KSPDev.ConfigUtils.PersistentFieldAttribute" /><meta name="Description" content="A simple attribute for the fields that need (de)serialization." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="KSPDev.ConfigUtils" /><meta name="file" content="T_KSPDev_ConfigUtils_PersistentFieldAttribute" /><meta name="guid" content="T_KSPDev_ConfigUtils_PersistentFieldAttribute" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">KSPDev Client utilities<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\N_KSPDev_ConfigUtils.htm" title="KSPDev Client utilities" tocid="roottoc">KSPDev Client utilities</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_ConfigUtils.htm" title="KSPDev.ConfigUtils" tocid="N_KSPDev_ConfigUtils">KSPDev.ConfigUtils</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_KSPDev_ConfigUtils_PersistentFieldAttribute.htm" title="PersistentFieldAttribute Class" tocid="T_KSPDev_ConfigUtils_PersistentFieldAttribute">PersistentFieldAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_KSPDev_ConfigUtils_PersistentFieldAttribute__ctor.htm" title="PersistentFieldAttribute Constructor " tocid="M_KSPDev_ConfigUtils_PersistentFieldAttribute__ctor">PersistentFieldAttribute Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_KSPDev_ConfigUtils_PersistentFieldAttribute.htm" title="PersistentFieldAttribute Properties" tocid="Properties_T_KSPDev_ConfigUtils_PersistentFieldAttribute">PersistentFieldAttribute Properties</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>PersistentFieldAttribute Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">A simple attribute for the fields that need (de)serialization.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST5190B443_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5190B443_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <a href="http://msdn2.microsoft.com/en-us/library/e8kc3626" target="_blank">System<span id="LST5190B443_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5190B443_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Attribute</a><br />    <a href="T_KSPDev_ConfigUtils_BasePersistentFieldAttribute.htm">KSPDev.ConfigUtils<span id="LST5190B443_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5190B443_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BasePersistentFieldAttribute</a><br />      <span class="selflink">KSPDev.ConfigUtils<span id="LST5190B443_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5190B443_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PersistentFieldAttribute</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_KSPDev_ConfigUtils.htm">KSPDev.ConfigUtils</a><br />
    <strong>Assembly:</strong>
   KSPDev_Utils.1.1 (in KSPDev_Utils.1.1.dll) Version: 1.1 for KSP v1.6+<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">AttributeUsageAttribute</span>(<span class="identifier">AttributeTargets</span>.Field)]
<span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">PersistentFieldAttribute</span> : <span class="identifier">BasePersistentFieldAttribute</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script><a id="HT_RequestExampleLink" href="https://github.com/ihsoft/KSPDev/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=KSPDev Client utilities: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/ihsoft/KSPDev/tree/master/Sources/Utils/ConfigUtils/PersistentFieldAttribute.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">PersistentFieldAttribute</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_ConfigUtils_PersistentFieldAttribute__ctor.htm">PersistentFieldAttribute</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">PersistentFieldAttribute</span> class</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_KSPDev_ConfigUtils_PersistentFieldAttribute_isCollection.htm">isCollection</a></td><td><div class="summary">Specifies if the annotated field is a collection of values.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID5RBSection" class="collapsibleSection"><p>
            The readonly fields cannot be restored from a persistent state. However, they can be written
            out.
            </p><p>
            By default the ordinal values are handled via <a href="T_KSPDev_ConfigUtils_StandardOrdinaryTypesProto.htm">StandardOrdinaryTypesProto</a>
            and the collection fields via <a href="T_KSPDev_ConfigUtils_GenericCollectionTypeProto.htm">GenericCollectionTypeProto</a>. These proto handlers can
            be changed in the annotation by assigning properties
            <a href="P_KSPDev_ConfigUtils_BasePersistentFieldAttribute_ordinaryTypeProto.htm">ordinaryTypeProto</a> and/or
            <a href="P_KSPDev_ConfigUtils_BasePersistentFieldAttribute_collectionTypeProto.htm">collectionTypeProto</a>.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection">
            Below is a simple usage of the attribute.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAQFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAQFBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAQFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> ClassWithPersistentFields {
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"my/listField"</span>, isCollection = <span class="highlight-keyword">true</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> List&lt;<span class="highlight-keyword">string</span>&gt; sampleList = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">string</span>&gt;();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">internal</span> <span class="highlight-keyword">struct</span> ComplexType {
<span class="highlight-spacerShort"></span>    [PersistentField(<span class="highlight-literal">"val1"</span>, <span class="highlight-keyword">group</span> = <span class="highlight-literal">"nevermind"</span>)]
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> <span class="highlight-keyword">bool</span> boolVal;
<span class="highlight-spacerShort"></span>    [PersistentField(<span class="highlight-literal">"val2"</span>)]
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> Color colorVal;
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"my/setField"</span>, isCollection = <span class="highlight-keyword">true</span>, <span class="highlight-keyword">group</span> = <span class="highlight-literal">"abc"</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> HashSet&lt;ComplexType&gt; sampleSet = <span class="highlight-keyword">new</span> HashSet&lt;ComplexType&gt;();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> SaveConfigs() {
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Save a default group of fields: only field "sampleList" qualifies.</span>
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsIntoFile(<span class="highlight-literal">"settings.cfg"</span>, instance: <span class="highlight-keyword">this</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">/* The following structure in the file will be created:
<span class="highlight-spacerShort"></span>     * {
<span class="highlight-spacerShort"></span>     *   my
<span class="highlight-spacerShort"></span>     *   {
<span class="highlight-spacerShort"></span>     *     listField: string1
<span class="highlight-spacerShort"></span>     *     listField: string2
<span class="highlight-spacerShort"></span>     *   }
<span class="highlight-spacerShort"></span>     * }
<span class="highlight-spacerShort"></span>     */</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Save a specific group of fields: only field "sampleSet" belongs to group "abc".</span>
<span class="highlight-spacerShort"></span>    sampleSet.Add(<span class="highlight-keyword">new</span> ComplexType() { boolVal = <span class="highlight-keyword">true</span>, colorVal = Color.black });
<span class="highlight-spacerShort"></span>    sampleSet.Add(<span class="highlight-keyword">new</span> ComplexType() { boolVal = <span class="highlight-keyword">false</span>, colorVal = Color.white });
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsIntoFile(<span class="highlight-literal">"settings.cfg"</span>, instance: <span class="highlight-keyword">this</span>, <span class="highlight-keyword">group</span>: <span class="highlight-literal">"abc"</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">/* The following structure in the file will be created:
<span class="highlight-spacerShort"></span>     * {
<span class="highlight-spacerShort"></span>     *     setField
<span class="highlight-spacerShort"></span>     *     {
<span class="highlight-spacerShort"></span>     *       val1: True
<span class="highlight-spacerShort"></span>     *       val2: 0,0,0,1
<span class="highlight-spacerShort"></span>     *     }
<span class="highlight-spacerShort"></span>     *     setField
<span class="highlight-spacerShort"></span>     *     {
<span class="highlight-spacerShort"></span>     *       val1: false
<span class="highlight-spacerShort"></span>     *       val2: 1,1,1,1
<span class="highlight-spacerShort"></span>     *     }
<span class="highlight-spacerShort"></span>     *   }
<span class="highlight-spacerShort"></span>     * }
<span class="highlight-spacerShort"></span>     */</span>
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAQFBA");</script><p>
            Note that the group is ignored in the nested types. I.e. in <span class="code">ComplexType</span> in this case.
            However, if <span class="code">ComplexType</span> was an immediate target of the <span class="code">WriteFieldsIntoFile</span> call
            then the group would be considered.
            </p><p>
            Visibility of the annotated field is also important. The persistent field attributes are only
            visible in the child class if they were public or protected in the parent. The private field
            annotations are not inherited and need to be handled at the level of the declaring class.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EANFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EANFBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EANFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> Parent {
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"parent_private"</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> <span class="highlight-keyword">int</span> field1 = <span class="highlight-number">1</span>;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"parent_protected"</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">protected</span> <span class="highlight-keyword">int</span> field2 = <span class="highlight-number">2</span>;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"parent_public"</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> field3 = <span class="highlight-number">3</span>;
<span class="highlight-spacerShort"></span>}
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> Child : Parent {
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"child_private"</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> <span class="highlight-keyword">int</span> field1 = <span class="highlight-number">10</span>;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> SaveConfig() {
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Save all fields in the inherited type. </span>
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsIntoFile(<span class="highlight-literal">"settings.cfg"</span>, instance: <span class="highlight-keyword">this</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">/* The following structure in the file will be created:
<span class="highlight-spacerShort"></span>     * {
<span class="highlight-spacerShort"></span>     *     parent_protected: 2
<span class="highlight-spacerShort"></span>     *     parent_public: 3
<span class="highlight-spacerShort"></span>     *     child_private: 10
<span class="highlight-spacerShort"></span>     * }
<span class="highlight-spacerShort"></span>     */</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Save all fields in the base type. </span>
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsIntoFile(<span class="highlight-literal">"settings.cfg"</span>, instance: (Parent) <span class="highlight-keyword">this</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">/* The following structure in the file will be created:
<span class="highlight-spacerShort"></span>     * {
<span class="highlight-spacerShort"></span>     *     parent_private: 1
<span class="highlight-spacerShort"></span>     *     parent_protected: 2
<span class="highlight-spacerShort"></span>     *     parent_public: 3
<span class="highlight-spacerShort"></span>     * }
<span class="highlight-spacerShort"></span>     */</span>
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EANFBA");</script><p>
            The code above implies that in a common case unsealed class should put the private fields in a
            group other than default to avoid settings collision.
            </p><p>
            When the type of the field is different from a primitive C# type or a common Unity 4 type you
            may need to provide a custom value handler to deal with (de)serializing. E.g. for an ordinary
            type it may look like this:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAKFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAKFBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAKFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> CustomType {
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"my/custom/type"</span>, ordinaryTypeProto = <span class="highlight-keyword">typeof</span>(MyTypeProto))]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> MyType field1;
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAKFBA");</script><p>
            Or your custom class can implement a KSP interface <span class="nolink">IConfigNode</span>, and it will be
            invoked during the field saving and restoring.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAIFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAIFBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAIFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> NodeCustomType : IConfigNode {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> <span class="highlight-keyword">void</span> Save(ConfigNode node) {
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> <span class="highlight-keyword">virtual</span> <span class="highlight-keyword">void</span> Load(ConfigNode node) {
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAIFBA");</script><p>
            In case of your type is really simple, and you can serialize it into a plain string, you may
            choose to implement <a href="T_KSPDev_ConfigUtils_IPersistentField.htm">IPersistentField</a> instead. It works in a similar way but the
            source/target of the persistense is a string instead of a config node.
            </p><p>
            If your custom type is a collection that cannot be handled by the standard proto you can provide
            your own collection proto handler. Note that if you do then the annotated field will be treated
            as a collection. In fact, when you set <span class="code">isCollection = true</span> what actually happens is just
            assigning <a href="T_KSPDev_ConfigUtils_GenericCollectionTypeProto.htm">GenericCollectionTypeProto</a> as a collection proto handler.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAFFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAFFBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAFFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> CustomTypes {
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"my/custom/type"</span>, collectionTypeProto = <span class="highlight-keyword">typeof</span>(MyCollectionProto))]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> MyCollection field1;
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAFFBA");</script>
            For more examples on custom proto handlers see <a href="T_KSPDev_ConfigUtils_AbstractOrdinaryValueTypeProto.htm">AbstractOrdinaryValueTypeProto</a> and
            <a href="T_KSPDev_ConfigUtils_AbstractCollectionTypeProto.htm">AbstractCollectionTypeProto</a>.
            </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_KSPDev_ConfigUtils.htm">KSPDev.ConfigUtils Namespace</a></div><div class="seeAlsoStyle"><a href="T_KSPDev_ConfigUtils_ConfigAccessor.htm">KSPDev.ConfigUtils<span id="LST5190B443_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5190B443_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ConfigAccessor</a></div><div class="seeAlsoStyle"><a href="T_KSPDev_ConfigUtils_AbstractOrdinaryValueTypeProto.htm">KSPDev.ConfigUtils<span id="LST5190B443_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5190B443_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AbstractOrdinaryValueTypeProto</a></div><div class="seeAlsoStyle"><a href="T_KSPDev_ConfigUtils_AbstractCollectionTypeProto.htm">KSPDev.ConfigUtils<span id="LST5190B443_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5190B443_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AbstractCollectionTypeProto</a></div><div class="seeAlsoStyle"><a href="T_KSPDev_ConfigUtils_IPersistentField.htm">KSPDev.ConfigUtils<span id="LST5190B443_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5190B443_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IPersistentField</a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="https://kerbalspaceprogram.com/api/interface_i_config_node.html" target="_blank">KSP: IConfigNode</a></div></div></div></div><div id="pageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:igor.zavoychinskiy%40gmail.com?Subject=KSPDev Client utilities">igor.zavoychinskiy@gmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>