<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IPersistentField Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IPersistentField interface" /><meta name="System.Keywords" content="KSPDev.ConfigUtils.IPersistentField interface" /><meta name="Microsoft.Help.F1" content="KSPDev.ConfigUtils.IPersistentField" /><meta name="Microsoft.Help.Id" content="T:KSPDev.ConfigUtils.IPersistentField" /><meta name="Description" content="Interface for the simple types that need custom (de)serialization logic." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="KSPDev.ConfigUtils" /><meta name="file" content="T_KSPDev_ConfigUtils_IPersistentField" /><meta name="guid" content="T_KSPDev_ConfigUtils_IPersistentField" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">KSPDev Client utilities<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_ConfigUtils.htm" title="KSPDev Client utilities" tocid="roottoc">KSPDev Client utilities</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_ConfigUtils.htm" title="KSPDev.ConfigUtils" tocid="N_KSPDev_ConfigUtils">KSPDev.ConfigUtils</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_KSPDev_ConfigUtils_IPersistentField.htm" title="IPersistentField Interface" tocid="T_KSPDev_ConfigUtils_IPersistentField">IPersistentField Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_KSPDev_ConfigUtils_IPersistentField.htm" title="IPersistentField Methods" tocid="Methods_T_KSPDev_ConfigUtils_IPersistentField">IPersistentField Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>IPersistentField Interface</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Interface for the simple types that need custom (de)serialization logic.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_KSPDev_ConfigUtils.htm">KSPDev.ConfigUtils</a><br />
    <strong>Assembly:</strong>
   KSPDev_Utils.2.5 (in KSPDev_Utils.2.5.dll) Version: 2.5 for KSP v1<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IPersistentField</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><a id="HT_RequestExampleLink" href="https://github.com/ihsoft/KSPDev/issues/new" target="_blank" rel="noopener noreferrer" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=KSPDev%20Client%20utilities: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/ihsoft/KSPDev_Utils/tree/2.5/Source/ConfigUtils/IPersistentField.cs" rel="noopener noreferrer" title="View the source code">View Source</a></div><p>The <span class="selflink">IPersistentField</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_ConfigUtils_IPersistentField_ParseFromString.htm">ParseFromString</a></td><td><div class="summary">Restores the object's state from a plain string.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_ConfigUtils_IPersistentField_SerializeToString.htm">SerializeToString</a></td><td><div class="summary">Returns the object's state as a plain string.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection">
             It's similar to <span class="code">IConfigNode</span> interface in the compound types but with the following
             differences:
             <ul><li>The value is (de)serialized from/to a simple string.</li><li>
             If the field is initialized to an instance of the type, then this instance will be used to
             deserialize the value. If the field is not initialized but there is a value in the config file,
             then a new instance will be created. For this reason the type must implement a default
             constructor.
             </li></ul><p>
             Note that the types that implement this interface will <i>never</i> be treated as compound. I.e.
             <a href="T_KSPDev_ConfigUtils_ConfigAccessor.htm">ConfigAccessor</a> will not try to persist the members of such types even though there
             may be fields attributed with <a href="T_KSPDev_ConfigUtils_PersistentFieldAttribute.htm">PersistentFieldAttribute</a>.
             </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection">
             Here is how a simple vector serialization may look like:
             <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABCBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABCBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABCBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyVector : IPeristentField {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">float</span> x;
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">float</span> y;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">/// &lt;inheritdoc/&gt;</span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> <span class="highlight-keyword">string</span> SerializeToString() {
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"{0},{1}"</span>, x ,y);
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">/// &lt;inheritdoc/&gt;</span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ParseFromString(<span class="highlight-keyword">string</span> <span class="highlight-keyword">value</span>) {
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> elements = <span class="highlight-keyword">value</span>.Split(<span class="highlight-literal">','</span>);
<span class="highlight-spacerShort"></span>    x = <span class="highlight-keyword">float</span>.Parse(elements[<span class="highlight-number">0</span>]);
<span class="highlight-spacerShort"></span>    y = <span class="highlight-keyword">float</span>.Parse(elements[<span class="highlight-number">1</span>]);
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABCBA");</script><p>
             This example doesn't do any checking when parsing the string, but in general it's a good idea to
             do a sanity check of the string. It's OK to throw an exception from the parsing method when the
             data is invalid.
             </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_KSPDev_ConfigUtils.htm">KSPDev.ConfigUtils Namespace</a></div><div class="seeAlsoStyle"><a href="T_KSPDev_ConfigUtils_ConfigAccessor.htm">KSPDev.ConfigUtils<span id="LSTC47124C8_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC47124C8_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ConfigAccessor</a></div><div class="seeAlsoStyle"><a href="T_KSPDev_ConfigUtils_PersistentFieldAttribute.htm">KSPDev.ConfigUtils<span id="LSTC47124C8_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC47124C8_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PersistentFieldAttribute</a></div></div></div></div><div id="pageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:igor.zavoychinskiy%40gmail.com?Subject=KSPDev%20Client%20utilities">igor.zavoychinskiy@gmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>