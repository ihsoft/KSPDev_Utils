<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>PersistentFieldsFileAttribute Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="PersistentFieldsFileAttribute class" /><meta name="System.Keywords" content="KSPDev.ConfigUtils.PersistentFieldsFileAttribute class" /><meta name="Microsoft.Help.F1" content="KSPDev.ConfigUtils.PersistentFieldsFileAttribute" /><meta name="Microsoft.Help.Id" content="T:KSPDev.ConfigUtils.PersistentFieldsFileAttribute" /><meta name="Description" content="A simple annotation to associate a persistent group with a configuration file." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="KSPDev.ConfigUtils" /><meta name="file" content="T_KSPDev_ConfigUtils_PersistentFieldsFileAttribute" /><meta name="guid" content="T_KSPDev_ConfigUtils_PersistentFieldsFileAttribute" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">KSPDev Client utilities<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_ConfigUtils.htm" title="KSPDev Client utilities" tocid="roottoc">KSPDev Client utilities</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_ConfigUtils.htm" title="KSPDev.ConfigUtils" tocid="N_KSPDev_ConfigUtils">KSPDev.ConfigUtils</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_KSPDev_ConfigUtils_PersistentFieldsFileAttribute.htm" title="PersistentFieldsFileAttribute Class" tocid="T_KSPDev_ConfigUtils_PersistentFieldsFileAttribute">PersistentFieldsFileAttribute Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_KSPDev_ConfigUtils_PersistentFieldsFileAttribute__ctor.htm" title="PersistentFieldsFileAttribute Constructor " tocid="M_KSPDev_ConfigUtils_PersistentFieldsFileAttribute__ctor">PersistentFieldsFileAttribute Constructor </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>PersistentFieldsFileAttribute Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             A simple annotation to associate a persistent group with a configuration file.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LSTCA6B12D6_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCA6B12D6_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <a href="https://docs.microsoft.com/dotnet/api/system.attribute" target="_blank" rel="noopener noreferrer">System<span id="LSTCA6B12D6_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCA6B12D6_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Attribute</a><br />    <a href="T_KSPDev_ConfigUtils_AbstractPersistentFieldsFileAttribute.htm">KSPDev.ConfigUtils<span id="LSTCA6B12D6_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCA6B12D6_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AbstractPersistentFieldsFileAttribute</a><br />      <span class="selflink">KSPDev.ConfigUtils<span id="LSTCA6B12D6_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCA6B12D6_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PersistentFieldsFileAttribute</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_KSPDev_ConfigUtils.htm">KSPDev.ConfigUtils</a><br />
    <strong>Assembly:</strong>
   KSPDev_Utils.2.5 (in KSPDev_Utils.2.5.dll) Version: 2.5 for KSP v1<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">AttributeUsageAttribute</span>(<span class="identifier">AttributeTargets</span>.Class|<span class="identifier">AttributeTargets</span>.Struct, AllowMultiple = <span class="keyword">true</span>)]
<span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">PersistentFieldsFileAttribute</span> : <span class="identifier">AbstractPersistentFieldsFileAttribute</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script><a id="HT_RequestExampleLink" href="https://github.com/ihsoft/KSPDev/issues/new" target="_blank" rel="noopener noreferrer" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=KSPDev%20Client%20utilities: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/ihsoft/KSPDev_Utils/tree/2.5/Source/ConfigUtils/PersistentFieldsFileAttribute.cs" rel="noopener noreferrer" title="View the source code">View Source</a></div><p>The <span class="selflink">PersistentFieldsFileAttribute</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_ConfigUtils_PersistentFieldsFileAttribute__ctor.htm">PersistentFieldsFileAttribute</a></td><td><div class="summary">Constructor for a persistent field.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection">Multiple annotations are allowed on the class. It's not required to have unique
             filename/nodePath/group set in every annontation but it's highly recommended.  
             <p>This assignment is ignored in the nested classes. Though, when using nested class as an
             immediate target of the call the annotation will be handled just fine.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EADCBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EADCBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EADCBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span>[PersistentFieldsFile(<span class="highlight-literal">"settings.cfg"</span>, <span class="highlight-literal">"Root/Default"</span>)]
<span class="highlight-spacerShort"></span>[PersistentFieldsFile(<span class="highlight-literal">"settings-other.cfg"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"abc"</span>)]
<span class="highlight-spacerShort"></span>[PersistentFieldsFile(<span class="highlight-literal">"settings-nested-bad.cfg"</span>, <span class="highlight-literal">""</span>, <span class="highlight-literal">"nevermind"</span>)]
<span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> ClassWithPersistentFields {
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"field1"</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> <span class="highlight-keyword">int</span> intField = <span class="highlight-number">0</span>;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  [PersistentFieldsFile(<span class="highlight-literal">"settings-nested-good.cfg"</span>, <span class="highlight-literal">"Root/Nested"</span>, <span class="highlight-literal">"nevermind"</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">internal</span> <span class="highlight-keyword">struct</span> ComplexType {
<span class="highlight-spacerShort"></span>    [PersistentField(<span class="highlight-literal">"val1"</span>, <span class="highlight-keyword">group</span> = <span class="highlight-literal">"nevermind"</span>)]
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> <span class="highlight-keyword">bool</span> boolVal;
<span class="highlight-spacerShort"></span>    [PersistentField(<span class="highlight-literal">"val2"</span>, <span class="highlight-keyword">group</span> = <span class="highlight-literal">"nevermind"</span>)]
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> Color colorVal;
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"complexField1"</span>, <span class="highlight-keyword">group</span> = <span class="highlight-literal">"abc"</span>)]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> ComplexType complexField;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> SaveFields() {
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Save a default group of fields. </span>
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsFromType(instance: <span class="highlight-keyword">this</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">/* File will be created at "GameData/settings.cfg":
<span class="highlight-spacerShort"></span>     * Root
<span class="highlight-spacerShort"></span>     * {
<span class="highlight-spacerShort"></span>     *   Default
<span class="highlight-spacerShort"></span>     *   {
<span class="highlight-spacerShort"></span>     *     field1: 0
<span class="highlight-spacerShort"></span>     *   }
<span class="highlight-spacerShort"></span>     * }
<span class="highlight-spacerShort"></span>     */</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Save group "abc". Note that the complex type only defines fields for group "nevermind"</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// but it's ignored. The group is only honored on the immediate type, i.e.</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ClassWithPersistentFields in this case. </span>
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsFromType(instance: <span class="highlight-keyword">this</span>, <span class="highlight-keyword">group</span>: <span class="highlight-literal">"abc"</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">/* File will be created at "GameData/settings-other.cfg".
<span class="highlight-spacerShort"></span>     * {
<span class="highlight-spacerShort"></span>     *   complexField1
<span class="highlight-spacerShort"></span>     *   {
<span class="highlight-spacerShort"></span>     *     val1: False
<span class="highlight-spacerShort"></span>     *     val2: 0,0,0,1
<span class="highlight-spacerShort"></span>     *   }
<span class="highlight-spacerShort"></span>     * }
<span class="highlight-spacerShort"></span>     */</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Try to use incorrect setup and save group "nevermind" for "this". </span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// File will be created at "GameData/settings-nested-bad.cfg". And it will be empty since</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// no fields for this group is defined in class ClassWithPersistentFields.</span>
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsFromType(instance: <span class="highlight-keyword">this</span>, <span class="highlight-keyword">group</span>: <span class="highlight-literal">"nevermind"</span>);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Proper use of the nested complex type would be like this.</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> test = <span class="highlight-keyword">new</span> ComplexType() {
<span class="highlight-spacerShort"></span>        boolVal = <span class="highlight-keyword">true</span>,
<span class="highlight-spacerShort"></span>        colorVal = Color.white
<span class="highlight-spacerShort"></span>    };
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsFromType(instance: test, <span class="highlight-keyword">group</span>: <span class="highlight-literal">"nevermind"</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">/* File will be created at "GameData/settings-nested-good.cfg".
<span class="highlight-spacerShort"></span>     * Root
<span class="highlight-spacerShort"></span>     * {
<span class="highlight-spacerShort"></span>     *   Nested
<span class="highlight-spacerShort"></span>     *   {
<span class="highlight-spacerShort"></span>     *     complexField1
<span class="highlight-spacerShort"></span>     *     {
<span class="highlight-spacerShort"></span>     *       val1: True
<span class="highlight-spacerShort"></span>     *       val2: 1,1,1,1
<span class="highlight-spacerShort"></span>     *     }
<span class="highlight-spacerShort"></span>     *   }
<span class="highlight-spacerShort"></span>     * }
<span class="highlight-spacerShort"></span>     */</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// The following call makes the similar output but with different values.    </span>
<span class="highlight-spacerShort"></span>    ConfigAccessor.WriteFieldsFromType(instance: complexField, <span class="highlight-keyword">group</span>: <span class="highlight-literal">"nevermind"</span>);
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EADCBA");</script>
             Note that this annotation only adds or re-creates the node specified by <span class="code">nodePath</span>. If
             target file had other nodes they will not be overwritten. Though, you may expect the file
             structure to be re-ordered and comments (if any) lost. The file is actualy changed, it's read,
             updated, and saved.
             </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_KSPDev_ConfigUtils.htm">KSPDev.ConfigUtils Namespace</a></div><div class="seeAlsoStyle"><a href="M_KSPDev_ConfigUtils_ConfigAccessor_ReadFieldsInType.htm">ConfigAccessor<span id="LSTCA6B12D6_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCA6B12D6_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ReadFieldsInType(Type, Object, String)</a></div><div class="seeAlsoStyle"><a href="M_KSPDev_ConfigUtils_ConfigAccessor_WriteFieldsFromType.htm">ConfigAccessor<span id="LSTCA6B12D6_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTCA6B12D6_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>WriteFieldsFromType(Type, Object, String)</a></div></div></div></div><div id="pageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:igor.zavoychinskiy%40gmail.com?Subject=KSPDev%20Client%20utilities">igor.zavoychinskiy@gmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>