<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>AsyncCall.WaitForPhysics Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="WaitForPhysics method" /><meta name="System.Keywords" content="AsyncCall.WaitForPhysics method" /><meta name="Microsoft.Help.F1" content="KSPDev.ProcessingUtils.AsyncCall.WaitForPhysics" /><meta name="Microsoft.Help.Id" content="M:KSPDev.ProcessingUtils.AsyncCall.WaitForPhysics(UnityEngine.MonoBehaviour,System.Int32,System.Func{System.Boolean},System.Action,System.Action,System.Action{System.Int32})" /><meta name="Description" content="Delays execution until the specified condition is reached. Waiting is limited by the specified number of fixed frame updates." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="KSPDev.ProcessingUtils" /><meta name="file" content="M_KSPDev_ProcessingUtils_AsyncCall_WaitForPhysics" /><meta name="guid" content="M_KSPDev_ProcessingUtils_AsyncCall_WaitForPhysics" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">KSPDev Client utilities<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_ConfigUtils.htm" title="KSPDev Client utilities" tocid="roottoc">KSPDev Client utilities</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_ProcessingUtils.htm" title="KSPDev.ProcessingUtils" tocid="N_KSPDev_ProcessingUtils">KSPDev.ProcessingUtils</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_KSPDev_ProcessingUtils_AsyncCall.htm" title="AsyncCall Class" tocid="T_KSPDev_ProcessingUtils_AsyncCall">AsyncCall Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_KSPDev_ProcessingUtils_AsyncCall.htm" title="AsyncCall Methods" tocid="Methods_T_KSPDev_ProcessingUtils_AsyncCall">AsyncCall Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_KSPDev_ProcessingUtils_AsyncCall_AsyncWaitForPhysics.htm" title="AsyncWaitForPhysics Method " tocid="M_KSPDev_ProcessingUtils_AsyncCall_AsyncWaitForPhysics">AsyncWaitForPhysics Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_KSPDev_ProcessingUtils_AsyncCall_CallOnEndOfFrame.htm" title="CallOnEndOfFrame Method " tocid="M_KSPDev_ProcessingUtils_AsyncCall_CallOnEndOfFrame">CallOnEndOfFrame Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_KSPDev_ProcessingUtils_AsyncCall_CallOnFixedUpdate.htm" title="CallOnFixedUpdate Method " tocid="M_KSPDev_ProcessingUtils_AsyncCall_CallOnFixedUpdate">CallOnFixedUpdate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_KSPDev_ProcessingUtils_AsyncCall_CallOnTimeout.htm" title="CallOnTimeout Method " tocid="M_KSPDev_ProcessingUtils_AsyncCall_CallOnTimeout">CallOnTimeout Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_KSPDev_ProcessingUtils_AsyncCall_WaitForPhysics.htm" title="WaitForPhysics Method " tocid="M_KSPDev_ProcessingUtils_AsyncCall_WaitForPhysics">WaitForPhysics Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>AsyncCall<span id="LST8575FD0B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_0?cpp=::|nu=.");</script>WaitForPhysics Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Delays execution until the specified condition is reached. Waiting is limited by the specified
            number of fixed frame updates.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_KSPDev_ProcessingUtils.htm">KSPDev.ProcessingUtils</a><br />
    <strong>Assembly:</strong>
   KSPDev_Utils.2.7 (in KSPDev_Utils.2.7.dll) Version: 2.7 for KSP v1<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">Coroutine</span> <span class="identifier">WaitForPhysics</span>(
	<span class="identifier">MonoBehaviour</span> <span class="parameter">mono</span>,
	<span class="identifier">int</span> <span class="parameter">maxFrames</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">bool</span>&gt; <span class="parameter">waitUntilFn</span>,
	<span class="identifier">Action</span> <span class="parameter">success</span> = <span class="keyword">null</span>,
	<span class="identifier">Action</span> <span class="parameter">failure</span> = <span class="keyword">null</span>,
	<span class="identifier">Action</span>&lt;<span class="identifier">int</span>&gt; <span class="parameter">update</span> = <span class="keyword">null</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><a id="HT_RequestExampleLink" href="https://github.com/ihsoft/KSPDev/issues/new" target="_blank" rel="noopener noreferrer" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=KSPDev%20Client%20utilities: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/ihsoft/KSPDev_Utils/tree/2.5/Source/ProcessingUtils/AsyncCall.cs#L124" rel="noopener noreferrer" title="View the source code">View Source</a><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">mono</span></dt><dd>Type: <span class="nolink">UnityEngine<span id="LST8575FD0B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MonoBehaviour</span><br />
            The Unity object to run the coroutine on. If this object dies, then the async call will not be
            invoked.
            </dd><dt><span class="parameter">maxFrames</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">System<span id="LST8575FD0B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The number of fixed frame updates to wait before giving up.</dd><dt><span class="parameter">waitUntilFn</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.func-1" target="_blank" rel="noopener noreferrer">System<span id="LST8575FD0B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Func</a><span id="LST8575FD0B_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a><span id="LST8575FD0B_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />
            The state checking function. It should return <span class="code">true</span> once the target state is reached.
            The very first execution happens immediately on the method call, <i>before</i> exiting from
            the method. If this execution returns <span class="code">true</span>, then the successful callback is also called
            immediately.
            </dd><dt><span class="parameter">success</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.action" target="_blank" rel="noopener noreferrer">System<span id="LST8575FD0B_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Action</a><br />
            The callback to execute when the state has been successfully reached.
            </dd><dt><span class="parameter">failure</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.action" target="_blank" rel="noopener noreferrer">System<span id="LST8575FD0B_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Action</a><br />
            The callabck to execute when the state has not been reached before the frame update limit is
            exhausted.
            </dd><dt><span class="parameter">update</span> (Optional)</dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.action-1" target="_blank" rel="noopener noreferrer">System<span id="LST8575FD0B_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Action</a><span id="LST8575FD0B_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a><span id="LST8575FD0B_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />
            The callback to execute every fixed frame update while waiting. This callabck will be called
            at least once, and the first call happens immediately. The argument tells how many frames the
            method was waiting so far. For the very first call it's <span class="code">0</span>.
            </dd></dl><h4 class="subHeading">Return Value</h4>Type: <span class="nolink">Coroutine</span><br />The coroutine instance.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection">
            Can be used when the code expects some specific physical state of the game. The method
            allows to define for how long to wait, what to do while waiting, and what to execute when
            target state is reached or missed.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> AsyncCall_WaitForPhysics1 : MonoBehaviour {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> Awake() {
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> count = <span class="highlight-number">5</span>;
<span class="highlight-spacerShort"></span>    Debug.Log(<span class="highlight-literal">"Before start waiting"</span>);
<span class="highlight-spacerShort"></span>    AsyncCall.WaitForPhysics(
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">this</span>, <span class="highlight-number">10</span>,
<span class="highlight-spacerShort"></span>        () =&gt; --count == <span class="highlight-number">0</span>,
<span class="highlight-spacerShort"></span>        success: () =&gt; Debug.Log(<span class="highlight-literal">"Success!"</span>),
<span class="highlight-spacerShort"></span>        failure: () =&gt; Debug.Log(<span class="highlight-literal">"Failure!"</span>),
<span class="highlight-spacerShort"></span>        update: x =&gt; Debug.LogFormat(<span class="highlight-literal">"...waiting: {0}"</span>, x));
<span class="highlight-spacerShort"></span>    Debug.Log(<span class="highlight-literal">"After start waiting"</span>);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// The output in the logs will be:</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Before start waiting</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 0</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// After start waiting</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 1</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 2</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 3</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 4</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Success!</span>
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID4RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> AsyncCall_WaitForPhysics2 : MonoBehaviour {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> Awake() {
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> count = <span class="highlight-number">10</span>;
<span class="highlight-spacerShort"></span>    Debug.Log(<span class="highlight-literal">"Before start waiting"</span>);
<span class="highlight-spacerShort"></span>    AsyncCall.WaitForPhysics(
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">this</span>, <span class="highlight-number">5</span>,
<span class="highlight-spacerShort"></span>        () =&gt; --count == <span class="highlight-number">0</span>,
<span class="highlight-spacerShort"></span>        success: () =&gt; Debug.Log(<span class="highlight-literal">"Success!"</span>),
<span class="highlight-spacerShort"></span>        failure: () =&gt; Debug.Log(<span class="highlight-literal">"Failure!"</span>),
<span class="highlight-spacerShort"></span>        update: x =&gt; Debug.LogFormat(<span class="highlight-literal">"...waiting: {0}"</span>, x));
<span class="highlight-spacerShort"></span>    Debug.Log(<span class="highlight-literal">"After start waiting"</span>);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// The output in the logs will be:</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Before start waiting</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 0</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// After start waiting</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 1</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 2</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 3</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// ...waiting: 4</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Failure!</span>
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_KSPDev_ProcessingUtils_AsyncCall.htm">AsyncCall Class</a></div><div class="seeAlsoStyle"><a href="N_KSPDev_ProcessingUtils.htm">KSPDev.ProcessingUtils Namespace</a></div><div class="seeAlsoStyle"><a href="M_KSPDev_ProcessingUtils_AsyncCall_AsyncWaitForPhysics.htm">AsyncCall<span id="LST8575FD0B_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AsyncWaitForPhysics(Int32, Func<span id="LST8575FD0B_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST8575FD0B_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Action, Action, Action<span id="LST8575FD0B_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LST8575FD0B_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8575FD0B_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="https://docs.unity3d.com/Manual/Coroutines.html" target="_blank" rel="noopener noreferrer">Unity 3D: Coroutines</a></div><div class="seeAlsoStyle"><a href="https://docs.unity3d.com/ScriptReference/WaitForFixedUpdate.html" target="_blank" rel="noopener noreferrer">
            Unity 3D: WaitForFixedUpdate</a></div></div></div></div><div id="pageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:igor.zavoychinskiy%40gmail.com?Subject=KSPDev%20Client%20utilities">igor.zavoychinskiy@gmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>