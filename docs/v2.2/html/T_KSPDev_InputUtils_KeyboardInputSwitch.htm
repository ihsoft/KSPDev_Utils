<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>KeyboardInputSwitch Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="KeyboardInputSwitch class" /><meta name="System.Keywords" content="KSPDev.InputUtils.KeyboardInputSwitch class" /><meta name="Microsoft.Help.F1" content="KSPDev.InputUtils.KeyboardInputSwitch" /><meta name="Microsoft.Help.Id" content="T:KSPDev.InputUtils.KeyboardInputSwitch" /><meta name="Description" content="Wrapper around a keyboard key code that incapsulates the persiting and the handling logic into a single class." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="KSPDev.InputUtils" /><meta name="file" content="T_KSPDev_InputUtils_KeyboardInputSwitch" /><meta name="guid" content="T_KSPDev_InputUtils_KeyboardInputSwitch" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">KSPDev Client utilities<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_ConfigUtils.htm" title="KSPDev Client utilities" tocid="roottoc">KSPDev Client utilities</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_KSPDev_InputUtils.htm" title="KSPDev.InputUtils" tocid="N_KSPDev_InputUtils">KSPDev.InputUtils</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_KSPDev_InputUtils_KeyboardInputSwitch.htm" title="KeyboardInputSwitch Class" tocid="T_KSPDev_InputUtils_KeyboardInputSwitch">KeyboardInputSwitch Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_KSPDev_InputUtils_KeyboardInputSwitch__ctor.htm" title="KeyboardInputSwitch Constructor " tocid="Overload_KSPDev_InputUtils_KeyboardInputSwitch__ctor">KeyboardInputSwitch Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_KSPDev_InputUtils_KeyboardInputSwitch.htm" title="KeyboardInputSwitch Properties" tocid="Properties_T_KSPDev_InputUtils_KeyboardInputSwitch">KeyboardInputSwitch Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_KSPDev_InputUtils_KeyboardInputSwitch.htm" title="KeyboardInputSwitch Methods" tocid="Methods_T_KSPDev_InputUtils_KeyboardInputSwitch">KeyboardInputSwitch Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Events_T_KSPDev_InputUtils_KeyboardInputSwitch.htm" title="KeyboardInputSwitch Events" tocid="Events_T_KSPDev_InputUtils_KeyboardInputSwitch">KeyboardInputSwitch Events</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Fields_T_KSPDev_InputUtils_KeyboardInputSwitch.htm" title="KeyboardInputSwitch Fields" tocid="Fields_T_KSPDev_InputUtils_KeyboardInputSwitch">KeyboardInputSwitch Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>KeyboardInputSwitch Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Wrapper around a keyboard key code that incapsulates the persiting and the handling logic into
             a single class.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST33443795_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST33443795_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <span class="selflink">KSPDev.InputUtils<span id="LST33443795_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST33443795_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>KeyboardInputSwitch</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_KSPDev_InputUtils.htm">KSPDev.InputUtils</a><br />
    <strong>Assembly:</strong>
   KSPDev_Utils.2.2 (in KSPDev_Utils.2.2.dll) Version: 2.2 for KSP v1<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">KeyboardInputSwitch</span> : <span class="identifier">IConfigNode</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script><a id="HT_RequestExampleLink" href="https://github.com/ihsoft/KSPDev/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=KSPDev%20Client%20utilities: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/ihsoft/KSPDev/tree/master/Sources/Utils/InputUtils/KeyboardInputSwitch.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">KeyboardInputSwitch</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_InputUtils_KeyboardInputSwitch__ctor.htm">KeyboardInputSwitch<span id="LST33443795_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST33443795_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Creates a switch with a <span class="nolink">None</span> key binding. It's a default constructor
            needed for the <a href="T_KSPDev_ConfigUtils_PersistentFieldAttribute.htm">PersistentFieldAttribute</a> functionality to work.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_InputUtils_KeyboardInputSwitch__ctor_1.htm">KeyboardInputSwitch(KeyCode)</a></td><td><div class="summary">Main constructor to create a switch for the provided key code.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_KSPDev_InputUtils_KeyboardInputSwitch_isAnyKeyHold.htm">isAnyKeyHold</a></td><td><div class="summary">Tells if any switch is being hold.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_KSPDev_InputUtils_KeyboardInputSwitch_isHold.htm">isHold</a></td><td><div class="summary">Defines the current hold state of the switch.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_InputUtils_KeyboardInputSwitch_Load.htm">Load</a></td><td><div class="summary">Loads a persisted switch binding.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_InputUtils_KeyboardInputSwitch_Save.htm">Save</a></td><td><div class="summary">Saves the switch binding.</div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_KSPDev_InputUtils_KeyboardInputSwitch_SetHoldState.htm">SetHoldState</a></td><td><div class="summary">Updates the hold state and triggers the event(s) if any.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_KSPDev_InputUtils_KeyboardInputSwitch_Update.htm">Update</a></td><td><div class="summary">Checks the keyboard status and updates the switch accordingly.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Events</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="eventList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_KSPDev_InputUtils_KeyboardInputSwitch_OnClick.htm">OnClick</a></td><td><div class="summary">
            Event that notifies about the click event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_KSPDev_InputUtils_KeyboardInputSwitch_OnPress.htm">OnPress</a></td><td><div class="summary">
            Event that notifies that the switch key has been pressed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_KSPDev_InputUtils_KeyboardInputSwitch_OnRelease.htm">OnRelease</a></td><td><div class="summary">
            Event that notifies that the switch key has been released.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_KSPDev_InputUtils_KeyboardInputSwitch_OnStateChanged.htm">OnStateChanged</a></td><td><div class="summary">
            Event that notifies about the hold state change. The event is only called when the state has
            actually changed.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID7RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="F_KSPDev_InputUtils_KeyboardInputSwitch_ClickDelay.htm">ClickDelay</a></td><td><div class="summary">Maximum delay to record a click event.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_KSPDev_InputUtils_KeyboardInputSwitch_keyboardEnabled.htm">keyboardEnabled</a></td><td><div class="summary">
            Determines if the switch should react on the keyboard events from the <a href="M_KSPDev_InputUtils_KeyboardInputSwitch_Update.htm">Update<span id="LST33443795_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST33443795_3?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
            method.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /></td><td><a href="F_KSPDev_InputUtils_KeyboardInputSwitch_keyCode.htm">keyCode</a></td><td><div class="summary">Key code for the switch.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID8RBSection" class="collapsibleSection"><p>
             The fields of this type are correctly handled by the stock game persisting functionality
             (<span class="nolink">KSPField</span>). It's also compatible with the KSPDev persisting logic
             (<a href="T_KSPDev_ConfigUtils_PersistentFieldAttribute.htm">PersistentFieldAttribute</a>).
             </p><p><i>Important!</i> This type will be correctly loaded or saved by the KSP core but it will
             <i>not</i> be correctly copied in the game's editor. It's not an issue when the field is static
             but in case of it's an instance member, the code must not be accessing it in the editor mode.
             </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID9RBSection" class="collapsibleSection"><p>
             To define a key binding just create a class with the key code as a parameter, and notify the
             switch about the frame updates so that it could update its state:
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAGCBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAGCBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAGCBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> MyClass : MonoBehaviour {
<span class="highlight-spacerShort"></span>  KeyboardInputSwitch mySwitch = <span class="highlight-keyword">new</span> KeyboardInputSwitch(KeyCode.Alpha1);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> Update() {
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (mySwitch.Update()) {
<span class="highlight-spacerShort"></span>      Debug.Log(<span class="highlight-literal">"The key is being hold"</span>);
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAGCBA");</script><p>
             In case of the switch state needs to be checked from the other methods use <a href="P_KSPDev_InputUtils_KeyboardInputSwitch_isHold.htm">isHold</a>
             property:
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAECBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAECBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAECBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> MyClass : MonoBehaviour {
<span class="highlight-spacerShort"></span>  KeyboardInputSwitch mySwitch = <span class="highlight-keyword">new</span> KeyboardInputSwitch(KeyCode.Alpha1);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> Update() {
<span class="highlight-spacerShort"></span>    mySwitch.Update();
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> FixedUpdate() {
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (mySwitch.isHold) {
<span class="highlight-spacerShort"></span>      Debug.Log(<span class="highlight-literal">"The key is being hold"</span>);
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAECBA");</script><p>
             When the code needs to react to a switch state event, it can register a listener:
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACCBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACCBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACCBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> MyClass : MonoBehaviour {
<span class="highlight-spacerShort"></span>  KeyboardInputSwitch mySwitch = <span class="highlight-keyword">new</span> KeyboardInputSwitch(KeyCode.Alpha1);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> Awake() {
<span class="highlight-spacerShort"></span>    mySwitch.OnStateChanged += OnSwitchStateChange;
<span class="highlight-spacerShort"></span>    mySwitch.OnPress += <span class="highlight-keyword">delegate</span>{
<span class="highlight-spacerShort"></span>      Debug.Log(<span class="highlight-literal">"Key pressed"</span>);
<span class="highlight-spacerShort"></span>    };
<span class="highlight-spacerShort"></span>    mySwitch.OnRelease += <span class="highlight-keyword">delegate</span>{
<span class="highlight-spacerShort"></span>      Debug.Log(<span class="highlight-literal">"Key is released"</span>);
<span class="highlight-spacerShort"></span>    };
<span class="highlight-spacerShort"></span>    mySwitch.OnClick += <span class="highlight-keyword">delegate</span>{
<span class="highlight-spacerShort"></span>      Debug.Log(<span class="highlight-literal">"Key click registered"</span>);
<span class="highlight-spacerShort"></span>    };
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> OnDestroy() {
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Do nothing since in this example the switch is an instance field, and it will be</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// destroyed together with the owning class (and, hence, all the listeners).</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// However, if it was a static field we would do something like this:</span>
<span class="highlight-spacerShort"></span>    mySwitch.OnStateChanged -= OnSwitchStateChange;
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Anonymous functions cannot be unregistered, so don't use them on the static fields.</span>
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> OnSwitchStateChange() {
<span class="highlight-spacerShort"></span>    Debug.LogFormat(<span class="highlight-literal">"Switch state changed to: {0}"</span>, mySwitch.isHold);
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">void</span> Update() {
<span class="highlight-spacerShort"></span>    mySwitch.Update();
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACCBA");</script><p>
             In many cases you may want to load a key bining from a config file. It can be achieved by
             adding an attribute to the field of this type:
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span>[PersistentFieldsFile(<span class="highlight-literal">"my/mod/settings.cfg"</span>, <span class="highlight-literal">""</span>)]
<span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> MyClass : PartModule {
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">// Note that KSPField attributed fields *must* be public.</span>
<span class="highlight-spacerShort"></span>  [KSPField]
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> KeyboardInputSwitch switchFromPart = <span class="highlight-keyword">new</span> KeyboardInputSwitch(KeyCode.Alpha1);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">// Note that for a PersistentField attribute the field doesn't need to be public.</span>
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">// However, the private fields are handled a bit differently (read the docs!).</span>
<span class="highlight-spacerShort"></span>  [PersistentField(<span class="highlight-literal">"Keyboard/Bindings"</span>)]
<span class="highlight-spacerShort"></span>  KeyboardInputSwitch switchFromSettings = <span class="highlight-keyword">new</span> KeyboardInputSwitch(KeyCode.Alpha2);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> OnLoad(ConfigNode node) {
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// At this point `switchFromPart` is already loaded from the part's config.</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">base</span>.OnLoad(node);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Load `switchFromSettings` via KSPDev from "my/mod/settings.cfg".</span>
<span class="highlight-spacerShort"></span>    KSPDev.ConfigUtils.ConfigAccessor.ReadFieldsInType(<span class="highlight-keyword">typeof</span>(MyClass), <span class="highlight-keyword">this</span>);
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAACBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID10RB')" onkeypress="SectionExpandCollapse_CheckKey('ID10RB', event)" tabindex="0"><img id="ID10RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID10RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_KSPDev_InputUtils.htm">KSPDev.InputUtils Namespace</a></div><div class="seeAlsoStyle"><a href="T_KSPDev_ConfigUtils_PersistentFieldAttribute.htm">KSPDev.ConfigUtils<span id="LST33443795_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST33443795_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PersistentFieldAttribute</a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="https://kerbalspaceprogram.com/api/class_k_s_p_field.html" target="_blank">KSP: KSPField</a></div></div></div></div><div id="pageFooter" class="pageFooter"><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:igor.zavoychinskiy%40gmail.com?Subject=KSPDev%20Client%20utilities">igor.zavoychinskiy@gmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>